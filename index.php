<?php
	/* 
	Тсиклы
	есть do-while, while, for, foreach
	и конструктсии break, continue
	начнем с while, самый простой тсикл
	выполняет итератсию тсикла если предикат верен, и выглядит вот так:
	while (предикат) {
		тело тсикла;
	}
	*/

	$i = 0;
	while($i++ < 10) {
		echo "$i";
		if ($i == 10) {
			echo "<br>";
		}
	}
	echo "конетс тсикла<br>";
	// если вы видите переменную с именем i, то скорее всего это итератор для тсикла
	/* 
	а что это за предикат? $i++ < 10? а именно $i++, что это?
	если что, он и проверяет условие и инкрементирует к числу 1, да вот так просто
	т.е если мы в теле тсикла бы написали $i++, а в предикате не писали, то ничего бы не поменялось
	вспоминаем, что сначала проверяется условие а только потом выполняется инкремент
	*/
	// есть так же тсикл do while
	$i = 0;
	do {
		echo "$i";
		if ($i == 10) {
			echo "<br>";
		}
 	} while($i++ < 10);
	// он сначала выполняет код, а потом проверяет условие, не особо сильно популярен в веб разработке.
	// и получается так, что код 100% выполнится 1 раз

	// есть более гибкий тсикл for, который очень гибок
	/* вот такой синтаксис:
	for (инитсиализатсия переменных; условие(предикат); код который выполнятся будет каждый ход) {
		тело тсикла
	}
	так же можно записывать вот так:
	for (;условие(предикат);) {
		тело тсикла
	}
	*/

	for ($i = 0, $b = 10; $i <= $b; $i++) {
		echo "$i";
		if ($i == 10) {
			echo "<br>";
		}
	}

	// чаще всего работа с базами данных работает именно while и foreach
	// кстати про foreach, нужен он только для массивов, и выглядит вот так:
	
	$user = ["name" => "Norskiy", "age" => 15, "hobby" => "programming", "languages" => "PHP, Rust, HTMX"];
	foreach ($user as $key => $item) {
		echo "Ключ: $key -> Аргумент массива: $item.<br>";
	}
	/* это работает так: foreach ($массив as $(переменная, которая выступает как ключ или индекс массива) => $(переменная, которая выступает как аргумент массива)) {
		тело тсикла
	} 
	теперь мы можем эти переменные которые выступают за индекс/аргумент выводить в echo или где нибудь еще
	*/

	// так же можно перебирать многомерные массивы, вот так:

	$userbase = [
		"id1" => ["name" => "Norskiy", "age" => 15, "role" => "Owner"],
		"id2" => ["name" => "Admin", "age" => 99, "role" => "Administrator"]
	];

	foreach ($userbase as $array) {
		foreach ($array as $key => $item) {
				echo "$key => $item<br>";
		}
	}

	// так же есть break и continue, если тсикл видит break, то тсикл немедленно завершается
	// а если тсикл находит continue то итератсия сразу заканчивается и начинается новая